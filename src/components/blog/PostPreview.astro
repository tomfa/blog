---
import type { CollectionEntry } from "astro:content";
import type { IElement } from "@/data/shared";
import { getFormattedDate } from "@/utils";

interface Props extends IElement {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
	withTags?: boolean;
}

const { post, as: Element = "div", withDesc = false, withTags = true } = Astro.props;
const date = new Date(post.data.pubDate || Date.now());
const datetime = date.toISOString();
const postDate = getFormattedDate(date, { month: "short" });
---

<Element>
	<a href={`/${post.slug}`} class="cactus-link pb:0 inline-block" rel="prefetch">
		{post.data.title}
	</a>
</Element>
<div class="align-start sm:mt-1 flex w-full justify-between flex-col sm:flex-row">
	<div class="shrink-0">
		<time class="text-xs text-gray-400" datetime={datetime}>{postDate}</time>

		<span class="mr-3 text-xs text-gray-400"> â€¢ {post.data.category}</span>
	</div>
	<div class="sm:text-right">
		{
			post.data.tags.map((tag, i) => (
				<>
					<a
						href={`/tags/${tag}`}
						aria-label={`View all posts with the tag: ${tag}`}
						class="link mr-2 items-center justify-center rounded-lg text-xs text-accent dark:opacity-30 dark:hover:opacity-100"
					>{tag}</a>
				</>
			))
		}
	</div>
</div>

{withDesc && <q class="mt-2 block italic line-clamp-3">{post.data.description}</q>}
