---
import type { CollectionEntry } from "astro:content";

import BaseLayout from "./Base.astro";
import BlogHero from "@/components/blog/Hero";

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const { headings } = await post.render();
const minDepth = headings.reduce((min, { depth }) => Math.min(min, depth), Infinity);
---

<BaseLayout meta={{ title: post.data.title, description: post.data.description }}>
	<div class="sm:grid sm:grid-cols-[3fr_1fr] sm:items-start sm:gap-x-10">
		<article class="break-words">
			<BlogHero content={post} />
			<div
				class="prose prose-sm prose-cactus mt-12 prose-headings:font-semibold prose-headings:before:absolute prose-headings:before:-ml-4 prose-headings:before:text-accent prose-headings:before:content-['#'] prose-th:before:content-none"
			>
				<slot />
			</div>
		</article>
		{
			headings.length > 0 && (
				<aside class="hidden text-right sm:sticky sm:top-20 sm:block">
					<h2 class="font-semibold">Table of Contents</h2>
					<ul class="mt-4 text-xs">
						{headings
							// .filter(({ depth }) => depth === minDepth)
							.map(({ slug, text, depth }, i) => {
								if (depth === minDepth) {
									return (
										<li class={`line-clamp-2 hover:text-accent mt-2`}>
											<a href={`#${slug}`} aria-label={`Scroll to section: ${text}`}>
												{text}
											</a>
										</li>
									);
								}
								if (depth - 1 === minDepth) {
									return (
										<li class="line-clamp-2 text-gray-400 hover:text-accent mt-0">
											<a href={`#${slug}`} aria-label={`Scroll to section: ${text}`}>
												{text}
											</a>
										</li>
									);
								}
								return null;
							})}
					</ul>
				</aside>
			)
		}
	</div>
</BaseLayout>
