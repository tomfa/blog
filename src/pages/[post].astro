---
import type { GetStaticPathsResult } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogPost from "@/layouts/BlogPost";

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
	const posts: CollectionEntry<"post">[] = await getCollection("post");
	const links: CollectionEntry<"link">[] = await getCollection("link");
	const all = [...posts, ...links];
	const params = all.filter(p => !p.data.draft || import.meta.env.DEV).map((post, i) => ({
		params: { post: post.slug },
		props: { post, prev: all[i - 1], next: all[i + 1] },
	}));
	return params;
}

interface Props {
	post: CollectionEntry<"post">;
}

const { post, prev, next } = Astro.props;
const { Content } = await post.render();
---

<BlogPost post={post}>
	<Content />
	{
		(prev || next) && (
			<div class="pt-20 text-xs flex justify-between">
				{prev && (
					<div class="mb-2 flex gap-2">
						<span class="text-xs">&lt;</span>
						<a class="text-xs" href={`/${prev.slug}`}>
							{prev.data.title}
						</a>
					</div>
				)}
				{next && (
					<div class="text-right flex gap-2">
						<a class="text-xs" href={`/${next.slug}`}>
							{next.data.title}
						</a>
						<span class="text-xs">&gt;</span>
					</div>
				)}
			</div>
		)
	}
</BlogPost>
